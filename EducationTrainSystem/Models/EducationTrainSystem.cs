#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EducationTrainSystem.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EducationTrainSystem")]
	public partial class EducationTrain : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCertificationTrain(CertificationTrain instance);
    partial void UpdateCertificationTrain(CertificationTrain instance);
    partial void DeleteCertificationTrain(CertificationTrain instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertEduTrain(EduTrain instance);
    partial void UpdateEduTrain(EduTrain instance);
    partial void DeleteEduTrain(EduTrain instance);
    partial void InsertKeyValueGroup(KeyValueGroup instance);
    partial void UpdateKeyValueGroup(KeyValueGroup instance);
    partial void DeleteKeyValueGroup(KeyValueGroup instance);
    partial void InsertKeyValueMatch(KeyValueMatch instance);
    partial void UpdateKeyValueMatch(KeyValueMatch instance);
    partial void DeleteKeyValueMatch(KeyValueMatch instance);
    partial void InsertKeyValue(KeyValue instance);
    partial void UpdateKeyValue(KeyValue instance);
    partial void DeleteKeyValue(KeyValue instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void InsertRegUser(RegUser instance);
    partial void UpdateRegUser(RegUser instance);
    partial void DeleteRegUser(RegUser instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSchoolSubject(SchoolSubject instance);
    partial void UpdateSchoolSubject(SchoolSubject instance);
    partial void DeleteSchoolSubject(SchoolSubject instance);
    partial void InsertSchoolTrain(SchoolTrain instance);
    partial void UpdateSchoolTrain(SchoolTrain instance);
    partial void DeleteSchoolTrain(SchoolTrain instance);
    partial void InsertTrain(Train instance);
    partial void UpdateTrain(Train instance);
    partial void DeleteTrain(Train instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    #endregion
				public EducationTrain() :
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConnection"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
		public EducationTrain(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EducationTrain(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EducationTrain(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EducationTrain(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CertificationTrain> CertificationTrains
		{
			get
			{
				return this.GetTable<CertificationTrain>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain> EduTrains
		{
			get
			{
				return this.GetTable<EduTrain>();
			}
		}
		
		public System.Data.Linq.Table<KeyValueGroup> KeyValueGroups
		{
			get
			{
				return this.GetTable<KeyValueGroup>();
			}
		}
		
		public System.Data.Linq.Table<KeyValueMatch> KeyValueMatches
		{
			get
			{
				return this.GetTable<KeyValueMatch>();
			}
		}
		
		public System.Data.Linq.Table<KeyValue> KeyValues
		{
			get
			{
				return this.GetTable<KeyValue>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<RegUser> RegUsers
		{
			get
			{
				return this.GetTable<RegUser>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SchoolSubject> SchoolSubjects
		{
			get
			{
				return this.GetTable<SchoolSubject>();
			}
		}
		
		public System.Data.Linq.Table<SchoolTrain> SchoolTrains
		{
			get
			{
				return this.GetTable<SchoolTrain>();
			}
		}
		
		public System.Data.Linq.Table<Train> Trains
		{
			get
			{
				return this.GetTable<Train>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CertificationTrains")]
	public partial class CertificationTrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Gid;
		
		private string _Course;
		
		private string _CurrentCollege;
		
		private string _CurrentGrade;
		
		private string _EduType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGidChanging(System.Guid value);
    partial void OnGidChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnCurrentCollegeChanging(string value);
    partial void OnCurrentCollegeChanged();
    partial void OnCurrentGradeChanging(string value);
    partial void OnCurrentGradeChanged();
    partial void OnEduTypeChanging(string value);
    partial void OnEduTypeChanged();
    #endregion
		
		public CertificationTrain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCollege", DbType="VarChar(500)")]
		public string CurrentCollege
		{
			get
			{
				return this._CurrentCollege;
			}
			set
			{
				if ((this._CurrentCollege != value))
				{
					this.OnCurrentCollegeChanging(value);
					this.SendPropertyChanging();
					this._CurrentCollege = value;
					this.SendPropertyChanged("CurrentCollege");
					this.OnCurrentCollegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentGrade", DbType="VarChar(500)")]
		public string CurrentGrade
		{
			get
			{
				return this._CurrentGrade;
			}
			set
			{
				if ((this._CurrentGrade != value))
				{
					this.OnCurrentGradeChanging(value);
					this.SendPropertyChanging();
					this._CurrentGrade = value;
					this.SendPropertyChanged("CurrentGrade");
					this.OnCurrentGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduType", DbType="VarChar(500)")]
		public string EduType
		{
			get
			{
				return this._EduType;
			}
			set
			{
				if ((this._EduType != value))
				{
					this.OnEduTypeChanging(value);
					this.SendPropertyChanging();
					this._EduType = value;
					this.SendPropertyChanged("EduType");
					this.OnEduTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _TrainId;
		
		private EntityRef<Train> _Train;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTrainIdChanging(int value);
    partial void OnTrainIdChanged();
    #endregion
		
		public Course()
		{
			this._Train = default(EntityRef<Train>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainId", DbType="Int NOT NULL")]
		public int TrainId
		{
			get
			{
				return this._TrainId;
			}
			set
			{
				if ((this._TrainId != value))
				{
					if (this._Train.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainIdChanging(value);
					this.SendPropertyChanging();
					this._TrainId = value;
					this.SendPropertyChanged("TrainId");
					this.OnTrainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Courses_Trains_TrainId", Storage="_Train", ThisKey="TrainId", OtherKey="Id", IsForeignKey=true)]
		public Train Train
		{
			get
			{
				return this._Train.Entity;
			}
			set
			{
				Train previousValue = this._Train.Entity;
				if (((previousValue != value) 
							|| (this._Train.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Train.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Train.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._TrainId = value.Id;
					}
					else
					{
						this._TrainId = default(int);
					}
					this.SendPropertyChanged("Train");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrains")]
	public partial class EduTrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Gid;
		
		private string _Course;
		
		private string _RegCollege;
		
		private string _RegMajor;
		
		private string _EduType;
		
		private string _CurrentCollege;
		
		private string _CurrentGrade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGidChanging(System.Guid value);
    partial void OnGidChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnRegCollegeChanging(string value);
    partial void OnRegCollegeChanged();
    partial void OnRegMajorChanging(string value);
    partial void OnRegMajorChanged();
    partial void OnEduTypeChanging(string value);
    partial void OnEduTypeChanged();
    partial void OnCurrentCollegeChanging(string value);
    partial void OnCurrentCollegeChanged();
    partial void OnCurrentGradeChanging(string value);
    partial void OnCurrentGradeChanged();
    #endregion
		
		public EduTrain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegCollege", DbType="VarChar(500)")]
		public string RegCollege
		{
			get
			{
				return this._RegCollege;
			}
			set
			{
				if ((this._RegCollege != value))
				{
					this.OnRegCollegeChanging(value);
					this.SendPropertyChanging();
					this._RegCollege = value;
					this.SendPropertyChanged("RegCollege");
					this.OnRegCollegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegMajor", DbType="VarChar(500)")]
		public string RegMajor
		{
			get
			{
				return this._RegMajor;
			}
			set
			{
				if ((this._RegMajor != value))
				{
					this.OnRegMajorChanging(value);
					this.SendPropertyChanging();
					this._RegMajor = value;
					this.SendPropertyChanged("RegMajor");
					this.OnRegMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduType", DbType="VarChar(500)")]
		public string EduType
		{
			get
			{
				return this._EduType;
			}
			set
			{
				if ((this._EduType != value))
				{
					this.OnEduTypeChanging(value);
					this.SendPropertyChanging();
					this._EduType = value;
					this.SendPropertyChanged("EduType");
					this.OnEduTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCollege", DbType="VarChar(500)")]
		public string CurrentCollege
		{
			get
			{
				return this._CurrentCollege;
			}
			set
			{
				if ((this._CurrentCollege != value))
				{
					this.OnCurrentCollegeChanging(value);
					this.SendPropertyChanging();
					this._CurrentCollege = value;
					this.SendPropertyChanged("CurrentCollege");
					this.OnCurrentCollegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentGrade", DbType="VarChar(500)")]
		public string CurrentGrade
		{
			get
			{
				return this._CurrentGrade;
			}
			set
			{
				if ((this._CurrentGrade != value))
				{
					this.OnCurrentGradeChanging(value);
					this.SendPropertyChanging();
					this._CurrentGrade = value;
					this.SendPropertyChanged("CurrentGrade");
					this.OnCurrentGradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyValueGroups")]
	public partial class KeyValueGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Category;
		
		private string _Description;
		
		private EntitySet<KeyValueMatch> _KeyValueMatches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public KeyValueGroup()
		{
			this._KeyValueMatches = new EntitySet<KeyValueMatch>(new Action<KeyValueMatch>(this.attach_KeyValueMatches), new Action<KeyValueMatch>(this.detach_KeyValueMatches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(500)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_KVM_KVG_GroupId", Storage="_KeyValueMatches", ThisKey="Id", OtherKey="GroupId", DeleteRule="CASCADE")]
		public EntitySet<KeyValueMatch> KeyValueMatches
		{
			get
			{
				return this._KeyValueMatches;
			}
			set
			{
				this._KeyValueMatches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KeyValueMatches(KeyValueMatch entity)
		{
			this.SendPropertyChanging();
			entity.KeyValueGroup = this;
		}
		
		private void detach_KeyValueMatches(KeyValueMatch entity)
		{
			this.SendPropertyChanging();
			entity.KeyValueGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyValueMatches")]
	public partial class KeyValueMatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GroupId;
		
		private int _ValueId;
		
		private EntityRef<KeyValue> _KeyValue;
		
		private EntityRef<KeyValueGroup> _KeyValueGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnValueIdChanging(int value);
    partial void OnValueIdChanged();
    #endregion
		
		public KeyValueMatch()
		{
			this._KeyValue = default(EntityRef<KeyValue>);
			this._KeyValueGroup = default(EntityRef<KeyValueGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._KeyValueGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ValueId
		{
			get
			{
				return this._ValueId;
			}
			set
			{
				if ((this._ValueId != value))
				{
					if (this._KeyValue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnValueIdChanging(value);
					this.SendPropertyChanging();
					this._ValueId = value;
					this.SendPropertyChanged("ValueId");
					this.OnValueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_KVM_KV_ValueId", Storage="_KeyValue", ThisKey="ValueId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public KeyValue KeyValue
		{
			get
			{
				return this._KeyValue.Entity;
			}
			set
			{
				KeyValue previousValue = this._KeyValue.Entity;
				if (((previousValue != value) 
							|| (this._KeyValue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KeyValue.Entity = null;
						previousValue.KeyValueMatches.Remove(this);
					}
					this._KeyValue.Entity = value;
					if ((value != null))
					{
						value.KeyValueMatches.Add(this);
						this._ValueId = value.Id;
					}
					else
					{
						this._ValueId = default(int);
					}
					this.SendPropertyChanged("KeyValue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_KVM_KVG_GroupId", Storage="_KeyValueGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public KeyValueGroup KeyValueGroup
		{
			get
			{
				return this._KeyValueGroup.Entity;
			}
			set
			{
				KeyValueGroup previousValue = this._KeyValueGroup.Entity;
				if (((previousValue != value) 
							|| (this._KeyValueGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KeyValueGroup.Entity = null;
						previousValue.KeyValueMatches.Remove(this);
					}
					this._KeyValueGroup.Entity = value;
					if ((value != null))
					{
						value.KeyValueMatches.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("KeyValueGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyValues")]
	public partial class KeyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Value;
		
		private string _Description;
		
		private string _Mark;
		
		private EntitySet<KeyValueMatch> _KeyValueMatches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMarkChanging(string value);
    partial void OnMarkChanged();
    #endregion
		
		public KeyValue()
		{
			this._KeyValueMatches = new EntitySet<KeyValueMatch>(new Action<KeyValueMatch>(this.attach_KeyValueMatches), new Action<KeyValueMatch>(this.detach_KeyValueMatches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(500)")]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_KVM_KV_ValueId", Storage="_KeyValueMatches", ThisKey="Id", OtherKey="ValueId", DeleteRule="CASCADE")]
		public EntitySet<KeyValueMatch> KeyValueMatches
		{
			get
			{
				return this._KeyValueMatches;
			}
			set
			{
				this._KeyValueMatches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KeyValueMatches(KeyValueMatch entity)
		{
			this.SendPropertyChanging();
			entity.KeyValue = this;
		}
		
		private void detach_KeyValueMatches(KeyValueMatch entity)
		{
			this.SendPropertyChanging();
			entity.KeyValue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registrations")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _Gid;
		
		private System.DateTime _GenerateDate;
		
		private string _ReceiptNumber;
		
		private decimal _Price;
		
		private string _Agent;
		
		private string _Payee;
		
		private string _Note;
		
		private bool _Confirmed;
		
		private string _Address;
		
		private System.Nullable<System.Guid> _RegUserId;
		
		private string _TrainCategory;
		
		private System.Nullable<System.Guid> _TrainId;
		
		private EntityRef<RegUser> _RegUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGidChanging(System.Guid value);
    partial void OnGidChanged();
    partial void OnGenerateDateChanging(System.DateTime value);
    partial void OnGenerateDateChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnAgentChanging(string value);
    partial void OnAgentChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnConfirmedChanging(bool value);
    partial void OnConfirmedChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnRegUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnRegUserIdChanged();
    partial void OnTrainCategoryChanging(string value);
    partial void OnTrainCategoryChanged();
    partial void OnTrainIdChanging(System.Nullable<System.Guid> value);
    partial void OnTrainIdChanged();
    #endregion
		
		public Registration()
		{
			this._RegUser = default(EntityRef<RegUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenerateDate", DbType="DateTime NOT NULL")]
		public System.DateTime GenerateDate
		{
			get
			{
				return this._GenerateDate;
			}
			set
			{
				if ((this._GenerateDate != value))
				{
					this.OnGenerateDateChanging(value);
					this.SendPropertyChanging();
					this._GenerateDate = value;
					this.SendPropertyChanged("GenerateDate");
					this.OnGenerateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agent", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Agent
		{
			get
			{
				return this._Agent;
			}
			set
			{
				if ((this._Agent != value))
				{
					this.OnAgentChanging(value);
					this.SendPropertyChanging();
					this._Agent = value;
					this.SendPropertyChanged("Agent");
					this.OnAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmed", DbType="Bit NOT NULL")]
		public bool Confirmed
		{
			get
			{
				return this._Confirmed;
			}
			set
			{
				if ((this._Confirmed != value))
				{
					this.OnConfirmedChanging(value);
					this.SendPropertyChanging();
					this._Confirmed = value;
					this.SendPropertyChanged("Confirmed");
					this.OnConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RegUserId
		{
			get
			{
				return this._RegUserId;
			}
			set
			{
				if ((this._RegUserId != value))
				{
					if (this._RegUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegUserIdChanging(value);
					this.SendPropertyChanging();
					this._RegUserId = value;
					this.SendPropertyChanged("RegUserId");
					this.OnRegUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainCategory", DbType="VarChar(500)")]
		public string TrainCategory
		{
			get
			{
				return this._TrainCategory;
			}
			set
			{
				if ((this._TrainCategory != value))
				{
					this.OnTrainCategoryChanging(value);
					this.SendPropertyChanging();
					this._TrainCategory = value;
					this.SendPropertyChanged("TrainCategory");
					this.OnTrainCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TrainId
		{
			get
			{
				return this._TrainId;
			}
			set
			{
				if ((this._TrainId != value))
				{
					this.OnTrainIdChanging(value);
					this.SendPropertyChanging();
					this._TrainId = value;
					this.SendPropertyChanged("TrainId");
					this.OnTrainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Reg_RU_RegUserId", Storage="_RegUser", ThisKey="RegUserId", OtherKey="Gid", IsForeignKey=true)]
		public RegUser RegUser
		{
			get
			{
				return this._RegUser.Entity;
			}
			set
			{
				RegUser previousValue = this._RegUser.Entity;
				if (((previousValue != value) 
							|| (this._RegUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegUser.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._RegUser.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._RegUserId = value.Gid;
					}
					else
					{
						this._RegUserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RegUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegUsers")]
	public partial class RegUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Gid;
		
		private System.DateTime _RegDate;
		
		private string _Name;
		
		private bool _Gender;
		
		private string _Nation;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _CardId;
		
		private string _LiveAddress;
		
		private string _HomeAddress;
		
		private EntitySet<Registration> _Registrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGidChanging(System.Guid value);
    partial void OnGidChanged();
    partial void OnRegDateChanging(System.DateTime value);
    partial void OnRegDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnCardIdChanging(string value);
    partial void OnCardIdChanged();
    partial void OnLiveAddressChanging(string value);
    partial void OnLiveAddressChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    #endregion
		
		public RegUser()
		{
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegDate
		{
			get
			{
				return this._RegDate;
			}
			set
			{
				if ((this._RegDate != value))
				{
					this.OnRegDateChanging(value);
					this.SendPropertyChanging();
					this._RegDate = value;
					this.SendPropertyChanged("RegDate");
					this.OnRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(500)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(500)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(500)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardId", DbType="VarChar(500)")]
		public string CardId
		{
			get
			{
				return this._CardId;
			}
			set
			{
				if ((this._CardId != value))
				{
					this.OnCardIdChanging(value);
					this.SendPropertyChanging();
					this._CardId = value;
					this.SendPropertyChanged("CardId");
					this.OnCardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveAddress", DbType="VarChar(500)")]
		public string LiveAddress
		{
			get
			{
				return this._LiveAddress;
			}
			set
			{
				if ((this._LiveAddress != value))
				{
					this.OnLiveAddressChanging(value);
					this.SendPropertyChanging();
					this._LiveAddress = value;
					this.SendPropertyChanged("LiveAddress");
					this.OnLiveAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(500)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Reg_RU_RegUserId", Storage="_Registrations", ThisKey="Gid", OtherKey="RegUserId", DeleteRule="SET NULL")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.RegUser = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.RegUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleName;
		
		private string _ApplicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolSubjects")]
	public partial class SchoolSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Guid _TrainId;
		
		private string _Name;
		
		private System.Nullable<int> _Hours;
		
		private System.Nullable<decimal> _PricePerSubject;
		
		private EntityRef<SchoolTrain> _SchoolTrain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTrainIdChanging(System.Guid value);
    partial void OnTrainIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHoursChanging(System.Nullable<int> value);
    partial void OnHoursChanged();
    partial void OnPricePerSubjectChanging(System.Nullable<decimal> value);
    partial void OnPricePerSubjectChanged();
    #endregion
		
		public SchoolSubject()
		{
			this._SchoolTrain = default(EntityRef<SchoolTrain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TrainId
		{
			get
			{
				return this._TrainId;
			}
			set
			{
				if ((this._TrainId != value))
				{
					if (this._SchoolTrain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainIdChanging(value);
					this.SendPropertyChanging();
					this._TrainId = value;
					this.SendPropertyChanged("TrainId");
					this.OnTrainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Int")]
		public System.Nullable<int> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerSubject", DbType="Money")]
		public System.Nullable<decimal> PricePerSubject
		{
			get
			{
				return this._PricePerSubject;
			}
			set
			{
				if ((this._PricePerSubject != value))
				{
					this.OnPricePerSubjectChanging(value);
					this.SendPropertyChanging();
					this._PricePerSubject = value;
					this.SendPropertyChanged("PricePerSubject");
					this.OnPricePerSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SS_ST_TrainId", Storage="_SchoolTrain", ThisKey="TrainId", OtherKey="Gid", IsForeignKey=true)]
		public SchoolTrain SchoolTrain
		{
			get
			{
				return this._SchoolTrain.Entity;
			}
			set
			{
				SchoolTrain previousValue = this._SchoolTrain.Entity;
				if (((previousValue != value) 
							|| (this._SchoolTrain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolTrain.Entity = null;
						previousValue.SchoolSubjects.Remove(this);
					}
					this._SchoolTrain.Entity = value;
					if ((value != null))
					{
						value.SchoolSubjects.Add(this);
						this._TrainId = value.Gid;
					}
					else
					{
						this._TrainId = default(System.Guid);
					}
					this.SendPropertyChanged("SchoolTrain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolTrains")]
	public partial class SchoolTrain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Gid;
		
		private string _Course;
		
		private string _RegStage;
		
		private EntitySet<SchoolSubject> _SchoolSubjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGidChanging(System.Guid value);
    partial void OnGidChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnRegStageChanging(string value);
    partial void OnRegStageChanged();
    #endregion
		
		public SchoolTrain()
		{
			this._SchoolSubjects = new EntitySet<SchoolSubject>(new Action<SchoolSubject>(this.attach_SchoolSubjects), new Action<SchoolSubject>(this.detach_SchoolSubjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Gid
		{
			get
			{
				return this._Gid;
			}
			set
			{
				if ((this._Gid != value))
				{
					this.OnGidChanging(value);
					this.SendPropertyChanging();
					this._Gid = value;
					this.SendPropertyChanged("Gid");
					this.OnGidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegStage", DbType="VarChar(500)")]
		public string RegStage
		{
			get
			{
				return this._RegStage;
			}
			set
			{
				if ((this._RegStage != value))
				{
					this.OnRegStageChanging(value);
					this.SendPropertyChanging();
					this._RegStage = value;
					this.SendPropertyChanged("RegStage");
					this.OnRegStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SS_ST_TrainId", Storage="_SchoolSubjects", ThisKey="Gid", OtherKey="TrainId", DeleteRule="NO ACTION")]
		public EntitySet<SchoolSubject> SchoolSubjects
		{
			get
			{
				return this._SchoolSubjects;
			}
			set
			{
				this._SchoolSubjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SchoolSubjects(SchoolSubject entity)
		{
			this.SendPropertyChanging();
			entity.SchoolTrain = this;
		}
		
		private void detach_SchoolSubjects(SchoolSubject entity)
		{
			this.SendPropertyChanging();
			entity.SchoolTrain = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trains")]
	public partial class Train : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _Category;
		
		private EntitySet<Course> _Courses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public Train()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(500)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Courses_Trains_TrainId", Storage="_Courses", ThisKey="Id", OtherKey="TrainId", DeleteRule="NO ACTION")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Train = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Train = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Email;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleName;
		
		private string _ApplicationName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public UsersInRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
