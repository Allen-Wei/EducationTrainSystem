@{
    ViewBag.Title = "报名管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section header{
    @Html.Partial("~/Views/Partials/angular.cshtml")
    @Html.Partial("~/Views/Partials/angular.service.cshtml")
    @Html.Partial("~/Views/Partials/jqueryui.cshtml")

    <style type="text/css">
        input[type=radio] {
            -webkit-appearance: radio;
        }

        input[type=checkbox] {
            -webkit-appearance: checkbox;
        }

        .form-control[readonly] {
            background-color: white;
        }

        .tip {
            margin-left: -30px;
            position: fixed;
            z-index: 100;
            background-color: rgba(30, 30, 30, 0.3);
            width: 100%;
            padding: 0 8px;
            top: 50px;
            min-height: 30px;
            line-height: 30px;
        }

        .ellipsis {
            display: inline-block;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        .ellipsis-base {
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        .ng-hide, .hide {
            display: none;
        }

        .hey-inline {
            display: inline-block;
            width: auto;
        }

        .input-group .form-control {
            z-index: 1;
        }

        .top10 {
            margin-top: 10px;
        }

        .bottom10 {
            margin-bottom: 10px;
        }

        .new-form .col-xs-12 {
            margin-top: 10px;
            vertical-align: middle;
        }
        /*for form.html, detai.html*/
        .header-sub {
            color: #aaa;
        }
    </style>
}

@Html.Partial("~/Views/Partials/breadcrumb.cshtml")

<div ng-app="Registration">
    <div ng-controller="BodyCtrl">
        <div class="container-fluid" ng-view></div>
    </div>
</div>


<script>
    var app = angular.module('Registration', [
        'ngRoute',
        'edu.directives',
        'edu.filters',
        'edu.services.global',
        'edu.services.reg',
        'edu.services.train',
        'edu.services.course',
        'edu.services.keyvalue',
        'edu.services.keyvaluegroup',
        'edu.services.keyvaluematch',
        'edu.services.edutrain'
    ]);
    app.config(function ($routeProvider) {
        $routeProvider.when('/', {
            controller: 'ListCtrl',
            templateUrl: '/Partials/Education/Registration/list.html'
        }).when('/detail/:id', {
            controller: 'DetailCtrl',
            templateUrl: '/Partials/Education/Registration/detail.html'
        }).when('/edit/:id', {
            controller: 'FormCtrl',
            templateUrl: '/Partials/Education/Registration/form.html'
        }).when('/add', {
            controller: 'AddCtrl',
            templateUrl: '/Partials/Education/Registration/add.html'
        }).otherwise({
            redirectTo: '/'
        });
    });


    app.controller('BodyCtrl', function ($scope, AppConstant, $location) {
        $scope.constant = AppConstant;
        $scope.$on('$routeChangeStart', function (next, current) {
            var paths = [{ href: '/', text: '网站' }, { href: '#/', text: '主页' }];
            var path = $location.path();
            switch (path) {
                case '/': paths[1].href = undefined; break;
                case '/add': paths.push({ text: '新增' }); break;
                default: (function () {
                    if (path.indexOf('/detail/') != -1) {
                        paths.push({ text: '详情' });
                    }
                    if (path.indexOf('/edit/') != -1) {
                        paths.push({ text: '编辑' });
                    }
                })(); break;
            }

            amplify.publish('path.refresh', paths);
        });
    });
    app.controller('ListCtrl', function ($scope, RegSvc, TrainSvc, CourseSvc) {

        $scope.main = {
            regs: [],
            page: 1,
            pages: 1,
            total: 1,
            load: function (p) {
                RegSvc.getList(p).then(function (rep) {
                    $scope.main.regs = rep.data;
                    $scope.main.pages = parseInt(rep.headers('X-HeyHey-Pages'));
                    $scope.main.total = parseInt(rep.headers('X-HeyHey-Total'));
                });
            },
            refresh: function () {
                this.load(this.page);
            },
            remove: function (index) {
                var reg = this.regs[index];
                if (!reg) {
                    throw 'Cannot find ' + index;
                }

                RegSvc.remove(reg.Id).then(function (rep) {
                    if (rep.data) {
                        $scope.main.regs.splice(index, 1);
                    }
                }, function (rep) {
                    console.log('deleted fail.');
                });
            }
        };

        $scope.$watch('main.page', function (newVal, oldVal) {
            if (newVal <= 0) {
                throw 'Erro page number: ' + newVal;
            }
            if (newVal > $scope.main.pages) {
                throw 'Out of max pages: ' + newVal;
            }
            $scope.main.load(newVal);
        });
    });
    app.controller('DetailCtrl', function ($scope, $routeParams, RegSvc, TrainSvc, CourseSvc) {
        //TODO 给表Registrations添加Address字段
        $scope.main = {
            reg: {}
        };
        RegSvc.get($routeParams.id).then(function (rep) {
            $scope.main.reg = rep.data;
        });
    });
    app.controller('AddCtrl', function (
        $scope,
        $filter,
        AppConstant,
        KeyValueSvc,
        RegSvc,
        TrainSvc,
        CourseSvc,
        EduTrainSvc) {
        $scope.main = {
            user: {
                RegDate: $filter('date')(new Date(), AppConstant.ngDateFormat),
                Name: '',
                Nation: '汉',
                Gender: 'true',
                CardId: '',
                Phone: '',
                Phone2: '',
                LiveAddress: '',
                HomeAddress: '',
            },
            reg: {
                ReceiptNumber: '',
                Price: 0,
                Agent: '',
                Payee: '',
                Note: '',
                Confirmed: true
            },
            eduTrain: {
                Course: '',
                RegCollege: '',
                RegMajor: '',
                EduType: '专科',
                CurrentCollege: '',
                CurrentGrade: '大一'
            },
            certTrain: {
                Course: '',
                CurrentCollege: '',
                CurrentGrade: '大一',
                EduType: '专科'
            },

            submit: function () {
                var trainName = (this.assist.train || {})['Name'];
                if (!trainName) { throw 'Invalid train name'; return; }
                console.log('reg: ', this.reg);
                console.log('user: ', this.user);
                if (trainName == '学历教育') {
                    this.eduTrain.Course = this.assist.course.Name;
                    this.eduTrain.RegCollege = this.assist.regCollege.Name;
                    this.eduTrain.CurrentCollege = this.assist.currentCollege.Name;
                    console.log('edu: ', this.eduTrain);
                    RegSvc.add(this.reg, this.user, trainName, this.eduTrain).then(function (rep) {
                        console.log('server return: ', rep.data);
                    });
                }
                if (trainName == '资格证培训') {
                    this.certTrain.Course = this.assist.course.Name;
                    this.certTrain.CurrentCollege = this.assist.currentCollege.Name;
                    console.log('cert: ', this.certTrain);
                    RegSvc.add(this.reg, this.user, trainName, this.certTrain).then(function (rep) {
                        console.log('cert train server return: ', rep.data);
                    });;
                }
            },

            assist: {
                trains: [],
                train: {},
                courses: [],
                course: {},
                regAddresses: [],
                regAddress: {},
                currentColleges: [],
                currentCollege: {},
                regColleges: [],
                regCollege: {}
            }
        };


        //TODO load trains
        TrainSvc.getAll().then(function (rep) {
            $scope.main.assist.trains = rep.data;
            $scope.main.assist.train = $scope.main.assist.trains[0];
        });

        //load courses
        $scope.$watch('main.assist.train.Id', function (newVal, oldVal) {
            if (!newVal) { return; }
            //TODO
            CourseSvc.getByTrain(newVal).then(function (rep) {
                $scope.main.assist.courses = rep.data;
                $scope.main.assist.course = $scope.main.assist.courses[0];
            });
        });
        //load registration address
        RegSvc.loadRegAddresses().then(function (rep) {
            $scope.main.assist.regAddresses = rep.data;
            $scope.main.assist.regAddress = $scope.main.assist.regAddresses[0];
        });
        //load all colleges
        RegSvc.loadAllColleges().then(function (rep) {
            $scope.main.assist.currentColleges = rep.data;
            $scope.main.assist.currentCollege = $scope.main.assist.currentColleges[0];
        });
        //load registration college
        $scope.$watch('main.assist.course.Name', function (newVal, oldVal) {
            if (!newVal) { return; }
            KeyValueSvc.getByGroup(newVal).then(function (rep) {
                if (!rep.data) {
                    rep.data = [{}];
                }
                $scope.main.assist.regColleges = rep.data;
                $scope.main.assist.regCollege = $scope.main.assist.regColleges[0];
            });;
        });
    });




</script>